trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  dockerRegistryServiceConnection: 'dockerconnection'
  imageRepository: 'eldanius/python-microservice'
  dockerfilePath: 'Dockerfile'
  tag: '$(Build.BuildId)'
  containerRegistry: 'index.docker.io/eldanius'
  kubernetesServiceConnection: 'kubernetesconnection'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    addToPath: true

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    python -m unittest discover -s tests
  displayName: 'Run Unit Tests'

- task: Docker@2
  inputs:
    containerRegistry: '$(dockerRegistryServiceConnection)'
    repository: '$(imageRepository)'
    command: 'buildAndPush'
    Dockerfile: '$(dockerfilePath)'
    tags: |
      $(tag)

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'drop'
    publishLocation: 'Container'

- task: CopyFiles@2
  inputs:
    contents: |
      **/Dockerfile
      **/requirements.txt
      **/app.py
      **/deployment.yaml
      **/grafana.yaml
      **/prometheus.yaml
    targetFolder: '$(Build.ArtifactStagingDirectory)'
  displayName: 'Copy Files to Artifacts'

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'drop'
    publishLocation: 'Container'

- task: Kubernetes@1
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: '$(kubernetesServiceConnection)'
    namespace: 'default'
    command: 'apply'
    useConfigurationFile: 'true'
    configuration: 'deployment.yaml'
  displayName: 'Deploy to Kubernetes'
