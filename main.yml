name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Unit Tests
      run: |
        python -m unittest discover -s tests

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      run: |
        docker build -t eldanius/python-microservice:${{ github.sha }} .
        docker push eldanius/python-microservice:${{ github.sha }}

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'

    - name: Deploy to Kubernetes
      run: kubectl apply -f deployment.yaml
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}

    - name: Copy Files to Artifacts
      run: |
        mkdir -p $(Build.ArtifactStagingDirectory)
        cp Dockerfile $(Build.ArtifactStagingDirectory)
        cp requirements.txt $(Build.ArtifactStagingDirectory)
        cp app.py $(Build.ArtifactStagingDirectory)
        cp deployment.yaml $(Build.ArtifactStagingDirectory)
        cp grafana.yaml $(Build.ArtifactStagingDirectory)
        cp prometheus.yaml $(Build.ArtifactStagingDirectory)

    - name: Publish Build Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: drop
        path: $(Build.ArtifactStagingDirectory)
